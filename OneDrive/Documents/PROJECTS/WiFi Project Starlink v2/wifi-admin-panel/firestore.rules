rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- DEVELOPMENT MODE RULES (More permissive for testing) ---
    // In development, allow authenticated users to read/write most collections
    // This makes testing easier while keeping production secure
    
    // Users can read and write their own data
    match /users/{userId} {
        allow create, read, update: if request.auth != null && 
            (resource == null || resource.data.email == request.auth.token.email);
        // Allow admin access
        allow read, write: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    // Payments - users can create and read their own
    match /payments/{paymentId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read, update: if request.auth != null && 
            (resource.data.userId == request.auth.uid || 
             request.auth.token.email == 'lejzer36@gmail.com');
    }

    // Support tickets - users can create and manage their own
    match /supportTickets/{ticketId} {
        allow create, read, update, delete: if request.auth != null;
    }

    // Network status - allow authenticated users to read and write for testing
    match /networkStatus/{statusId} {
        allow read, write: if request.auth != null;
    }

    // Time packages - allow authenticated users to read
    match /timePackages/{packageId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }
    
    // Mural channels - allow authenticated users to read
    match /muralChannels/{channelId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }
    
    // System settings - allow authenticated users to read
    match /systemSettings/{settingId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    // Topics and posts - allow authenticated users to read and create
    match /topics/{topicId} {
        allow read: if request.auth != null;
        allow create, delete, update: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    match /posts/{postId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow delete: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    // Referrals - users can manage their own
    match /referrals/{referralId} {
        allow create, read, update: if request.auth != null && 
            (resource == null || resource.data.referrerId == request.auth.uid);
        allow read, write: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    match /referralShares/{shareId} {
        allow create, read: if request.auth != null && 
            (resource == null || resource.data.referrerId == request.auth.uid);
        allow read, write: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    // Notifications - users can read and update their own
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && 
            (resource.data.toUserId == request.auth.uid || 
             resource.data.isAdminNotification == true);
        allow read, write: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    // Allow authenticated users to list collections they need
    match /{collection}/{document=**} {
        allow list: if request.auth != null && 
            (collection == 'timePackages' ||
             collection == 'muralChannels' ||
             collection == 'systemSettings' ||
             collection == 'topics' ||
             collection == 'posts' ||
             collection == 'networkStatus' ||
             collection == 'users' ||
             collection == 'referrals' ||
             collection == 'referralShares' ||
             collection == 'supportTickets' ||
             collection == 'notifications' ||
             collection == 'payments');
        
        // Allow admins to list all collections
        allow list: if request.auth != null && 
            (request.auth.token.email == 'lejzer36@gmail.com' || 
             request.auth.token.email == 'lejzerv@gmail.com');
    }

    // Default rule: deny all other access
    match /{document=**} {
        allow read, write: if false;
    }
  }
}